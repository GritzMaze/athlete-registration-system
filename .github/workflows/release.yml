name: RELEASE

on:
  push:
    branches:
      - master
  workflow_dispatch:
    
jobs:
    build-client:
        runs-on: ubuntu-latest
        permissions:
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: set lower case owner name
              run: |
                    echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
              env:
                    OWNER: '${{ github.actor }}'
            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                context: .
                file: ./client/Dockerfile
                push: true
                tags: ghcr.io/${{ env.OWNER_LC }}/sebizclient:${{ github.run_id }}

    build-server:
        runs-on: ubuntu-latest
        permissions:
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: set lower case owner name
              run: |
                    echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
              env:
                    OWNER: '${{ github.actor }}'
            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                context: .
                file: ./server/Dockerfile
                push: true
                tags: ghcr.io/${{ env.OWNER_LC }}/sebizserver:${{ github.run_id }}

    build-database:
        runs-on: ubuntu-latest
        needs: [build-server]
        permissions:
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: set lower case owner name
              run: |
                    echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
              env:
                    OWNER: '${{ github.actor }}'
            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                context: .
                file: ./server/Dockerfile.database
                push: true
                tags: ghcr.io/${{ env.OWNER_LC }}/sebizdatabase:${{ github.run_id }}


    deploy-client-kube:
        name: Deploy client to Kubernetes
        needs: [build-client]
        runs-on: ubuntu-latest
        permissions:
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
  
            - name: Set up doctl
              uses: digitalocean/action-doctl@v2
              with:
                token: ${{ secrets.DIGITAL_OCEAN_API_TOKEN_KEY }}

            - name: Set up kubectl
              uses: tale/kubectl-action@v1
              with:
                base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: set lower case owner name
              run: |
                    echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
              env:
                    OWNER: '${{ github.actor }}'

            - name: Deploy to Kubernetes
              run:
                |
                export CLIENT_IMAGE=ghcr.io/${{ env.OWNER_LC }}/sebizclient:${{ github.run_id }}
                export SERVER_URL=${{ secrets.SERVER_URL }}
                export STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}
                export STRIPE_REGISTRATION_PRICE_ID=${{ secrets.STRIPE_REGISTRATION_PRICE_ID }}
                cat manifests/client-deployment.yml | envsubst | kubectl apply -f -
                kubectl apply -f manifests/client-map.yml

    deploy-server-kube:
        name: Deploy server to Kubernetes
        needs: [build-database]
        runs-on: ubuntu-latest
        permissions:
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
  
            - name: Set up doctl
              uses: digitalocean/action-doctl@v2
              with:
                token: ${{ secrets.DIGITAL_OCEAN_API_TOKEN_KEY }}

            - name: Set up kubectl
              uses: tale/kubectl-action@v1
              with:
                base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: set lower case owner name
              run: |
                    echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
              env:
                    OWNER: '${{ github.actor }}'

            - name: Deploy to Kubernetes
              run:
                |
                export SERVER_IMAGE=ghcr.io/${{ env.OWNER_LC }}/sebizserver:${{ github.run_id }}
                export DATABASE_URL=${{ secrets.DATABASE_URL }}
                cat manifests/server-deployment.yml | envsubst | kubectl apply -f -
                export DATABASE_IMAGE=ghcr.io/${{ env.OWNER_LC }}/sebizdatabase:${{ github.run_id }}
                export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
                export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
                export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
                cat manifests/postgres-deployment.yml | envsubst | kubectl apply -f -